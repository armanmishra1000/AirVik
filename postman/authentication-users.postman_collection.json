{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Authentication & Users API",
		"description": "Comprehensive API testing collection for hotel booking management system authentication endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () { pm.response.to.have.status(201); });",
									"pm.test('Response has success property', function () { const jsonData = pm.response.json(); pm.expect(jsonData).to.have.property('success'); pm.expect(jsonData.success).to.be.true; });",
									"pm.test('Response has user data', function () { const jsonData = pm.response.json(); pm.expect(jsonData.data.user).to.have.property('id'); pm.expect(jsonData.data.user.isEmailVerified).to.be.false; });",
									"if (pm.response.code === 201) { const jsonData = pm.response.json(); pm.environment.set('userId', jsonData.data.user.id); pm.environment.set('userEmail', jsonData.data.user.email); }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"TestPassword123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\",\n  \"dateOfBirth\": \"1990-01-01\",\n  \"preferences\": {\n    \"newsletter\": false,\n    \"notifications\": true\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "auth", "register"]
						}
					}
				},
				{
					"name": "Verify Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
									"pm.test('Response has success property', function () { const jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"pm.test('Response has success message', function () { const jsonData = pm.response.json(); pm.expect(jsonData.data.message).to.include('verified'); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"token\": \"{{verificationToken}}\"\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/auth/verify-email", "host": ["{{baseUrl}}"], "path": ["api", "v1", "auth", "verify-email"]}
					}
				},
				{
					"name": "Resend Verification Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
									"pm.test('Response has success property', function () { const jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"email\": \"{{userEmail}}\"\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/auth/resend-verification", "host": ["{{baseUrl}}"], "path": ["api", "v1", "auth", "resend-verification"]}
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
									"pm.test('Response has tokens', function () { const jsonData = pm.response.json(); pm.expect(jsonData.data.tokens).to.have.property('accessToken'); });",
									"if (pm.response.code === 200) { const jsonData = pm.response.json(); pm.environment.set('accessToken', jsonData.data.tokens.accessToken); pm.environment.set('refreshToken', jsonData.data.tokens.refreshToken); }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"email\": \"{{userEmail}}\",\n  \"password\": \"TestPassword123\"\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/auth/login", "host": ["{{baseUrl}}"], "path": ["api", "v1", "auth", "login"]}
					}
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [{"key": "Authorization", "value": "Bearer {{accessToken}}"}],
						"url": {"raw": "{{baseUrl}}/api/v1/auth/logout", "host": ["{{baseUrl}}"], "path": ["api", "v1", "auth", "logout"]}
					}
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) { const jsonData = pm.response.json(); pm.environment.set('accessToken', jsonData.data.tokens.accessToken); pm.environment.set('refreshToken', jsonData.data.tokens.refreshToken); }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/auth/refresh", "host": ["{{baseUrl}}"], "path": ["api", "v1", "auth", "refresh"]}
					}
				},
				{
					"name": "Request Password Reset",
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"email\": \"{{userEmail}}\"\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/auth/forgot-password", "host": ["{{baseUrl}}"], "path": ["api", "v1", "auth", "forgot-password"]}
					}
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"token\": \"{{resetToken}}\",\n  \"newPassword\": \"NewPassword123\"\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/auth/reset-password", "host": ["{{baseUrl}}"], "path": ["api", "v1", "auth", "reset-password"]}
					}
				}
			]
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
									"pm.test('Response has user data', function () { const jsonData = pm.response.json(); pm.expect(jsonData.data.user).to.have.property('id'); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [{"key": "Authorization", "value": "Bearer {{accessToken}}"}],
						"url": {"raw": "{{baseUrl}}/api/v1/users/profile", "host": ["{{baseUrl}}"], "path": ["api", "v1", "users", "profile"]}
					}
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [{"key": "Authorization", "value": "Bearer {{accessToken}}"}, {"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe Updated\",\n  \"phone\": \"+1987654321\",\n  \"preferences\": {\n    \"newsletter\": true,\n    \"notifications\": false\n  }\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/users/profile", "host": ["{{baseUrl}}"], "path": ["api", "v1", "users", "profile"]}
					}
				},
				{
					"name": "Change Password",
					"request": {
						"method": "PUT",
						"header": [{"key": "Authorization", "value": "Bearer {{accessToken}}"}, {"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"currentPassword\": \"TestPassword123\",\n  \"newPassword\": \"NewPassword123\"\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/users/password", "host": ["{{baseUrl}}"], "path": ["api", "v1", "users", "password"]}
					}
				},
				{
					"name": "Delete Account",
					"request": {
						"method": "DELETE",
						"header": [{"key": "Authorization", "value": "Bearer {{accessToken}}"}, {"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"password\": \"TestPassword123\"\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/users/account", "host": ["{{baseUrl}}"], "path": ["api", "v1", "users", "account"]}
					}
				}
			]
		},
		{
			"name": "Admin Management",
			"item": [
				{
					"name": "List All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
									"pm.test('Response has pagination', function () { const jsonData = pm.response.json(); pm.expect(jsonData).to.have.property('pagination'); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [{"key": "Authorization", "value": "Bearer {{adminToken}}"}],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users?page=1&limit=20&role=customer&isActive=true&search=john",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "users"],
							"query": [
								{"key": "page", "value": "1"},
								{"key": "limit", "value": "20"},
								{"key": "role", "value": "customer"},
								{"key": "isActive", "value": "true"},
								{"key": "search", "value": "john"}
							]
						}
					}
				},
				{
					"name": "Update User Role",
					"request": {
						"method": "PUT",
						"header": [{"key": "Authorization", "value": "Bearer {{adminToken}}"}, {"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"role\": \"manager\"\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/users/{{userId}}/role", "host": ["{{baseUrl}}"], "path": ["api", "v1", "users", "{{userId}}", "role"]}
					}
				},
				{
					"name": "Update User Status",
					"request": {
						"method": "PUT",
						"header": [{"key": "Authorization", "value": "Bearer {{adminToken}}"}, {"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"isActive\": false\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/users/{{userId}}/status", "host": ["{{baseUrl}}"], "path": ["api", "v1", "users", "{{userId}}", "status"]}
					}
				}
			]
		},
		{
			"name": "Workflow Tests",
			"item": [
				{
					"name": "Complete Registration Flow",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Generate unique test email",
									"const timestamp = Date.now();",
									"const testEmail = `test${timestamp}@example.com`;",
									"pm.environment.set('testEmail', testEmail);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Registration successful', function () { pm.response.to.have.status(201); });",
									"pm.test('User created with correct data', function () { const jsonData = pm.response.json(); pm.expect(jsonData.data.user.email).to.eql(pm.environment.get('testEmail')); pm.expect(jsonData.data.user.isEmailVerified).to.be.false; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {"mode": "raw", "raw": "{\n  \"email\": \"{{testEmail}}\",\n  \"password\": \"TestPassword123\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\"\n}"},
						"url": {"raw": "{{baseUrl}}/api/v1/auth/register", "host": ["{{baseUrl}}"], "path": ["api", "v1", "auth", "register"]}
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"console.log('Running request to:', pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response has correct content type', function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3001",
			"type": "string"
		},
		{
			"key": "testEmail",
			"value": "test@example.com",
			"type": "string"
		},
		{
			"key": "userEmail",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "adminToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "verificationToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "resetToken",
			"value": "",
			"type": "string"
		}
	]
}
